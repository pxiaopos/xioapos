{"version":3,"sources":["App.module.css","menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","list","today","Date","dd","getDate","mm","getMonth","getFullYear","CACHE","amendSum","sum","price","amendCounter","counter","item","num","newCounter","Object","assign","App","props","Count","state","isSumEqualZero","isPriceNegative","isNumberNegative","isItemEqualZero","undefined","setState","localStorage","hasOwnProperty","cache","getItem","JSON","parse","bind","preProps","preState","this","setItem","stringify","className","styles","container","menuContainer","menu","map","v","i","key","cx","box","btn","onClick","e","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.017e9b9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"App_menuContainer__1JEyA\",\"container\":\"App_container__1MQN3\",\"sum\":\"App_sum__3OjI1\",\"item\":\"App_item__1HZ5q\",\"box\":\"App_box__aqO3i\",\"btn\":\"App_btn__34jjX\"};","export default {\n    list: [\n        {\n            \"item\": \"水食蔬餐盒（素）\",\n            \"price\": 65,\n        },\n        {\n            \"item\": \"姑姑鮮蔬餐（素）\",\n            \"price\": 80,\n        },\n        {\n            \"item\": \"迷迭香嫩雞胸\",\n            \"price\": 90,\n        },\n        {\n            \"item\": \"黑麻油豬里肌\",\n            \"price\": 90,\n        },\n        {\n            \"item\": \"清香滷雞腿\",\n            \"price\": 95,\n        },\n        {\n            \"item\": \"香檸羅勒雕\",\n            \"price\": 100,\n        },\n        {\n            \"item\": \"藥膳燉雞腿\",\n            \"price\": 105,\n        },\n        {\n            \"item\": \"家鄉滷牛腱\",\n            \"price\": 120,\n        },\n        {\n            \"item\": \"義式烤雞腿排\",\n            \"price\": 120,\n        },\n        {\n            \"item\": \"迷迭香雞胸\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"麻油豬里肌\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"滷雞腿\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"香檸羅勒雕\",\n            \"price\": 50,\n        },\n        {\n            \"item\": \"藥膳雞腿\",\n            \"price\": 50,\n        },\n        {\n            \"item\": \"滷牛腱\",\n            \"price\": 60,\n        },\n        {\n            \"item\": \"水煮蛋\",\n            \"price\": 10,\n        },\n        {\n            \"item\": \"十穀米\",\n            \"price\": 15,\n        },\n        {\n            \"item\": \"蔬菜\",\n            \"price\": 45,\n        },\n    ]\n}","// TODO: reacthook -> typescript\nimport React, { PureComponent as Component } from 'react';\nimport cx from 'classnames'\n\nimport styles from  './App.module.css';\n\nimport menu from './menu';\n\nconst today = () => {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1;\n  let yyyy = today.getFullYear();\n\n  return yyyy + '/' + mm + '/' + dd\n}\n\nconst CACHE_PREFIX = 'cache_'\nconst CACHE = CACHE_PREFIX + today()\n\nconst amendSum = (sum, price) => {\n  return sum + price\n}\n\nconst amendCounter = (counter, item, num) => {\n  const newCounter = Object.assign({}, counter)\n\n  if (!newCounter[item]) {\n    newCounter[item] = 0\n  }\n\n  newCounter[item] = newCounter[item] + num\n\n  return newCounter\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // @ counter 為當前項目數量\n    // @ sum 為所有項目總和金額\n    // \n    // state: {\n    //  counter: {\n    //    \"chicken\": 0,\n    //    \"beef\": 1,\n    //  },\n    //  sum: 100\n    // }\n    this.state = {\n      counter: {},\n      sum: 0,\n    }\n\n    if (localStorage.hasOwnProperty(CACHE)) {\n      const cache = localStorage.getItem(CACHE)\n      this.state = JSON.parse(cache)\n    }\n\n    this.Count = this.Count.bind(this)\n  }\n\n  componentDidUpdate(preProps, preState) {\n    if (this.state !== preState) {\n      localStorage.setItem(CACHE, JSON.stringify(this.state))\n    } \n  }\n\n  Count = (item, num, price) => {\n    const { counter, sum } = this.state\n\n    const isSumEqualZero = sum === 0\n    const isPriceNegative = price < 0 \n    const isNumberNegative = num === -1\n    const isItemEqualZero = counter && ( counter[item] === 0 || counter[item] === undefined)\n\n    if ((isSumEqualZero && isPriceNegative) || (isNumberNegative && isItemEqualZero)) {\n      return\n    }\n\n    this.setState({\n      counter: amendCounter(counter, item, num),\n      sum: amendSum(sum, price)\n    })\n  }\n\n  render() {\n    const { counter, sum } = this.state\n\n    return (\n      <div>\n        <div className={styles.container}>\n          <p>{ today() } <span className={styles.sum}>總金額: {sum} 元</span></p>\n        </div>\n        <div className={styles.menuContainer}>\n          {\n            menu.list.map((v, i) => {\n              return (\n                <div key={i}>\n                  <div className={styles.container} >\n                    <p className={cx(styles.box, styles.item)}>{ v.item }</p>\n                    <p className={styles.box}>{ v.price }</p>\n                    <p className={styles.box}>目前數量 { counter[i] || 0 }</p>\n                  </div>\n                  <div className={styles.container} key={i}>\n                    <p \n                      className={cx(styles.box, styles.btn)}\n                      onClick={ e => {\n                        this.Count(i, -1, -v.price)\n                      }} \n                    >-</p>\n                    <p \n                      className={cx(styles.box, styles.btn)}\n                      onClick={ e => {\n                        this.Count(i, 1, v.price)\n                      }} \n                    >+</p>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}