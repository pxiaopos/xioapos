{"version":3,"sources":["containers/Order.module.css","actions/consts/index.js","actions/consts/item.js","actions/consts/history.js","actions/item.js","actions/history.js","actions/index.js","configs/menu.js","containers/Order.js","containers/History.js","containers/App.js","serviceWorker.js","services/helper.js","services/ajax.js","services/index.js","sagas/index.js","reducers/item.js","reducers/history.js","reducers/index.js","store.js","index.js"],"names":["module","exports","item","add","history","load","update","payload","type","consts","list","today","Date","dd","getDate","mm","getMonth","getFullYear","CACHE","amendSum","sum","price","amendCounter","counter","num","newCounter","Object","assign","Order","props","Count","state","isSumEqualZero","isPriceNegative","isNumberNegative","isItemEqualZero","undefined","setState","localStorage","hasOwnProperty","cache","getItem","JSON","parse","bind","preProps","preState","this","setItem","stringify","to","className","styles","container","menuContainer","menu","map","v","i","key","cx","box","btn","onClick","e","Component","compose","connect","dispatch","params","actions","History","size","data","date","_","App","needRedirect","match","path","location","pathname","from","render","withRouter","Boolean","window","hostname","findLocalItems","query","results","value","substring","push","timestamp","getTime","localStorageSpace","allStrings","length","sortDate","arr","min","minIndex","j","console","log","ajaxApi","rootSaga","action","services","res","put","all","takeLatest","defaultState","h","increase","decrease","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","storageStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a077facc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"Order_menuContainer__1q_zS\",\"container\":\"Order_container__eKvd1\",\"sum\":\"Order_sum__1k3kh\",\"item\":\"Order_item__3HHoQ\",\"box\":\"Order_box__3F8p9\",\"btn\":\"Order_btn__3vqfM\"};","import item from './item'\nimport history from './history'\n\nexport default {\n    item: item,\n    history: history\n}","const add = 'ADD_ITEM'\n\nexport default {\n    add\n}","const load = 'LOAD_HISTORY'\nconst update = 'UPDATE_HISTORY'\n\nexport default {\n    load,\n    update\n}","import consts from './consts'\n\nexport const add = payload => {\n  return {\n    type: consts.item.add,\n    payload: payload\n  }\n}\n","import consts from './consts'\n\nexport const load = () => {\n  return {\n    type: consts.history.load\n  }\n}","import * as item from './item'\nimport * as history from './history'\n\nexport default {\n  item: item,\n  history: history\n}\n","export default {\n    list: [\n        {\n            \"item\": \"水食蔬餐盒（素）\",\n            \"price\": 65,\n        },\n        {\n            \"item\": \"姑姑鮮蔬餐（素）\",\n            \"price\": 80,\n        },\n        {\n            \"item\": \"迷迭香嫩雞胸\",\n            \"price\": 90,\n        },\n        {\n            \"item\": \"黑麻油豬里肌\",\n            \"price\": 90,\n        },\n        {\n            \"item\": \"清香滷雞腿\",\n            \"price\": 95,\n        },\n        {\n            \"item\": \"香檸羅勒雕\",\n            \"price\": 100,\n        },\n        {\n            \"item\": \"藥膳燉雞腿\",\n            \"price\": 105,\n        },\n        {\n            \"item\": \"家鄉滷牛腱\",\n            \"price\": 120,\n        },\n        {\n            \"item\": \"義式烤雞腿排\",\n            \"price\": 120,\n        },\n        {\n            \"item\": \"迷迭香雞胸\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"麻油豬里肌\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"滷雞腿\",\n            \"price\": 45,\n        },\n        {\n            \"item\": \"香檸羅勒雕\",\n            \"price\": 50,\n        },\n        {\n            \"item\": \"藥膳雞腿\",\n            \"price\": 50,\n        },\n        {\n            \"item\": \"滷牛腱\",\n            \"price\": 60,\n        },\n        {\n            \"item\": \"水煮蛋\",\n            \"price\": 10,\n        },\n        {\n            \"item\": \"十穀米\",\n            \"price\": 15,\n        },\n        {\n            \"item\": \"蔬菜\",\n            \"price\": 45,\n        },\n    ]\n}","// TODO: reacthook -> typescript\nimport React, { PureComponent as Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport cx from 'classnames'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport actions from '../actions'\n\nimport styles from './Order.module.css';\nimport menu from '../configs/menu';\n\nconst today = () => {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1;\n  let yyyy = today.getFullYear();\n\n  return yyyy + '/' + mm + '/' + dd\n}\n\nconst CACHE_PREFIX = 'cache_'\nconst CACHE = CACHE_PREFIX + today()\n\nconst amendSum = (sum, price) => {\n  return sum + price\n}\n\nconst amendCounter = (counter, item, num) => {\n  const newCounter = Object.assign({}, counter)\n\n  if (!newCounter[item]) {\n    newCounter[item] = 0\n  }\n\n  newCounter[item] = newCounter[item] + num\n\n  return newCounter\n}\n\nclass Order extends Component {\n  constructor(props) {\n    super(props)\n\n    // @ counter 為當前項目數量\n    // @ sum 為所有項目總和金額\n    // \n    // state: {\n    //  counter: {\n    //    \"chicken\": 0,\n    //    \"beef\": 1,\n    //  },\n    //  sum: 100\n    // }\n    this.state = {\n      counter: {},\n      sum: 0,\n    }\n\n    if (localStorage.hasOwnProperty(CACHE)) {\n      const cache = localStorage.getItem(CACHE)\n      this.state = JSON.parse(cache)\n    }\n\n    this.Count = this.Count.bind(this)\n  }\n\n  componentDidUpdate(preProps, preState) {\n    if (this.state !== preState) {\n      localStorage.setItem(CACHE, JSON.stringify(this.state))\n    } \n  }\n\n  Count = (item, num, price) => {\n    const { counter, sum } = this.state\n\n    const isSumEqualZero = sum === 0\n    const isPriceNegative = price < 0 \n    const isNumberNegative = num === -1\n    const isItemEqualZero = counter && ( counter[item] === 0 || counter[item] === undefined)\n\n    if ((isSumEqualZero && isPriceNegative) || (isNumberNegative && isItemEqualZero)) {\n      return\n    }\n\n    this.setState({\n      counter: amendCounter(counter, item, num),\n      sum: amendSum(sum, price)\n    })\n  }\n\n  render() {\n    const { counter, sum } = this.state\n\n    return (\n      <div>\n        <div>\n            <Link to='/order'>Order </Link>\n            <Link to='/history'>History</Link>\n        </div>\n        <div className={styles.container}>\n          <p>{ today() } <span className={styles.sum}>總金額: {sum} 元</span></p>\n        </div>\n        <div className={styles.menuContainer}>\n          {\n            menu.list.map((v, i) => {\n              return (\n                <div key={i}>\n                  <div className={styles.container} >\n                    <p className={cx(styles.box, styles.item)}>{ v.item }</p>\n                    <p className={styles.box}>{ v.price }</p>\n                    <p className={styles.box}>目前數量 { counter[i] || 0 }</p>\n                  </div>\n                  <div className={styles.container} key={i}>\n                    <p \n                      className={cx(styles.box, styles.btn)}\n                      onClick={ e => {\n                        this.Count(i, -1, -v.price)\n                      }} \n                    >-</p>\n                    <p \n                      className={cx(styles.box, styles.btn)}\n                      onClick={ e => {\n                        this.Count(i, 1, v.price)\n                      }} \n                    >+</p>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default compose(\n  connect(\n    state => ({\n      item: state.item,\n    }),\n    dispatch => ({\n      add: params => dispatch(actions.item.add(params)),\n    })\n  ),\n)(Order)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport actions from '../actions'\nimport menu from '../configs/menu';\n\nclass History extends Component {\n    componentDidMount() {\n        this.props.load()\n    }\n\n    render() {\n        const { history } = this.props\n\n        return (\n            <>\n            <Link to='/order'>Order </Link>\n            <Link to='/history'>History</Link>\n            <p>size: {history.size}</p>\n            <table> \n                <thead> \n                    <tr>\n                        <th>日期</th>\n                        {\n                            menu.list.map((v, i) => {\n                                return <th key={i}>{v.item}</th>\n                            })\n                        } \n                        <th>總金額</th>\n                    </tr> \n                </thead> \n                <tbody> \n                    {\n                        history.data.map((data, i) => (\n                                <tr key={data.date}>\n                                    <th>{data.date}</th>\n                                    { menu.list.map((_, i) => <th key={data.date + '_' + i}>{data.list.counter[i] ? data.list.counter[i] : 0}</th>)}\n                                    <th>{data.list.sum}</th>\n                                </tr>\n                            )\n                        )\n                    }\n                </tbody> \n            </table>\n            </>\n        )\n    }\n}\n\nexport default compose(\n    connect(\n        state => ({\n            history: state.history,\n        }),\n        dispatch => ({\n            load: () => dispatch(actions.history.load()),\n        })\n    ),\n)(History)\n","import React, { Component } from 'react'\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport Order from './Order'\nimport History from './History'\n\nclass App extends Component {\n    render() {\n        const needRedirect = this.props.match.path === this.props.location.pathname\n\n        return (\n            <Switch>\n                {needRedirect && <Redirect from=\"/\" to='/order' />}\n                <Route path=\"/order\" render={props => <Order {...props} />} />\n                <Route path=\"/history\" render={props => <History {...props} />} />\n            </Switch>\n        )\n    }\n}\n\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const findLocalItems = query => {\n    let i, results = [];\n    for (i in localStorage) {\n        if (localStorage.hasOwnProperty(i)) {\n            if (i.match(query) || (!query && typeof i === 'string')) {\n                let value = JSON.parse(localStorage.getItem(i));\n                let date = i.substring(6)\n\n                results.push({\n                    timestamp: new Date(date).getTime(),\n                    date: date,\n                    list: value\n                })\n            }\n        }\n    }\n\n    return results;\n}\n\nexport const localStorageSpace = () => {\n    var allStrings = '';\n    for(var key in window.localStorage){\n        if(window.localStorage.hasOwnProperty(key)){\n            allStrings += window.localStorage[key];\n        }\n    }\n    return allStrings ? 3 + ((allStrings.length*16)/(8*1024)) + ' KB' : 'Empty (0 KB)';\n};\n\nexport const sortDate = arr => {\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      let min = arr[i].timestamp;\n      let minIndex = i;\n    \n      for (let j = i; j < length; j++) {\n        if (arr[j].timestamp < min) {\n          min = arr[j].timestamp;\n          minIndex = j;\n        }\n      }\n    \n      [arr[minIndex], arr[i]] = [arr[i], arr[minIndex]];\n    }\n\n    return arr;\n}\n","import 'whatwg-fetch'\nimport { findLocalItems, localStorageSpace, sortDate } from './helper'\n\n\nexport const add = payload => {\n    console.log('payload', payload)\n}\n\nexport const load = () => ({\n    data: sortDate(findLocalItems('cache_*')),\n    size: localStorageSpace()\n})\n\n\n\n","import * as ajaxApi from './ajax'\n\nexport default {\n  ...ajaxApi,\n}\n","import { all, put, takeLatest } from 'redux-saga/effects'\n\nimport consts from '../actions/consts'\nimport services from '../services'\n\nfunction* add(action) {\n    yield services.add(action)\n}\n\nfunction* load(action) {\n  const res = yield services.load()\n  yield put({ type: consts.history.update, res })\n}\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(consts.item.add, add),\n    takeLatest(consts.history.load, load)\n  ])\n}\n","import consts from '../actions/consts'\nimport { assign } from 'lodash'\n\nconst defaultState = {\n  h: 'abc'\n}\n\nconst item = (state = defaultState, action) => {\n  switch (action.type) {\n    case consts.item.increase:\n      return assign({}, state, {})\n\n    case consts.item.decrease:\n      return assign({}, state, {})\n\n    default:\n      return state\n  }\n}\n\nexport default item\n","import consts from '../actions/consts'\n\nconst defaultState = {\n  data: [],\n  size: ''\n}\n\nconst history = (state = defaultState, action) => {\n    switch (action.type) {\n    case consts.history.update:\n        return {...state, ...action.res}\n    default:\n      return state\n  }\n}\n\nexport default history\n","import { combineReducers } from 'redux'\nimport item from './item'\nimport history from './history'\n\nconst reducers = combineReducers({ \n    item, \n    history,\n})\n \nexport default reducers\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './sagas'\nimport reducers from './reducers'\n\n// redux-saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(sagaMiddleware)\n)\n\n// run saga\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport storageStore from './store'\n\nrender(\n    <HashRouter>\n        <Provider store={storageStore}>\n            <App />\n        </Provider>\n    </HashRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}